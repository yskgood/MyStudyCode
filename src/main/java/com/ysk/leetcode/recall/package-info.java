/**
 * 回溯算法：
 * 回溯算法是一种基于深度优先搜索的算法，通常应用于组合问题和排列问题。回溯算法的核心思想是穷举所有可能的解，通过剪枝来优化搜索过程，最终找到符合条件的解。
 * 在这种思想下，我们需要清晰的找出三个要素：选择 (Options)，限制 (Restraints)，结束条件 (Termination)。
 * 它是用递归实现
 * <p>
 * 具体来说，回溯算法的过程如下：
 * 选择：从问题的所有可能解中，选择一个合适的解作为当前解。
 * 约束：确定当前解的可行性，即该解是否符合问题的限制条件。
 * 深度优先搜索：在满足约束条件的前提下，继续向下搜索，直到找到最终解或者无解。
 * 回溯：如果搜索到某一步无解，则返回上一步重新选择。
 * <p>
 * 回溯算法的时间复杂度通常较高，因为需要枚举所有可能的解。但是在实际问题中，通过剪枝等优化方法，可以大幅降低搜索的时间复杂度。
 * <p>
 * 解决那些问题？
 * 组合问题：N个数⾥⾯按⼀定规则找出k个数的集合
 * 切割问题：⼀个字符串按⼀定规则有⼏种切割⽅式
 * ⼦集问题：⼀个N个数的集合⾥有多少符合条件的⼦集
 * 排列问题：N个数按⼀定规则全排列，有⼏种排列⽅式
 * 棋盘问题：N皇后，解数独等等。
 *
 * @author ysk
 * @date 2023/6/16 4:18 PM
 */
package com.ysk.leetcode.recall;